{"ast":null,"code":"import { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let FiltersService = /*#__PURE__*/(() => {\n  class FiltersService {\n    constructor() {\n      this.textFilter$ = new BehaviorSubject('');\n      this.sortDir$ = new BehaviorSubject('asc');\n      this.currentPage$ = new BehaviorSubject(0);\n      this.filters$ = combineLatest([this.textFilter$.pipe(distinctUntilChanged(), tap(() => this.currentPage$.next(0))), this.sortDir$.pipe(distinctUntilChanged(), tap(() => this.currentPage$.next(0))), this.currentPage$]).pipe(debounceTime(500));\n    }\n\n    changeText(text) {\n      this.textFilter$.next(text);\n    }\n\n    changeSort(direction) {\n      this.sortDir$.next(direction);\n    }\n\n    changePaginationDirection(direction) {\n      if (direction === 'left' && !this.currentPage$.value) return;\n      this.currentPage$.next(direction === 'left' ? this.currentPage$.value - 1 : this.currentPage$.value + 1);\n    }\n\n  }\n\n  FiltersService.ɵfac = function FiltersService_Factory(t) {\n    return new (t || FiltersService)();\n  };\n\n  FiltersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FiltersService,\n    factory: FiltersService.ɵfac,\n    providedIn: 'any'\n  });\n  return FiltersService;\n})();","map":null,"metadata":{},"sourceType":"module"}