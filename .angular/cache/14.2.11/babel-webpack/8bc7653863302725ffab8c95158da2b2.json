{"ast":null,"code":"import { combineLatest, delay, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    httpGet$(url, ..._args) {\n      return combineLatest([of([{\n        name: 'John',\n        surname: 'Doe',\n        specialisation: 'Cardiology',\n        workingDays: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri']\n      }, {\n        name: 'Andy',\n        surname: 'White',\n        specialisation: 'Psychiatry',\n        workingDays: ['Mon', 'Tue', 'Wed', 'Thu']\n      }, {\n        name: 'Jack',\n        surname: 'Black',\n        specialisation: 'Surgery',\n        workingDays: ['Mon', 'Tue', 'Wed', 'Fri']\n      }]).pipe(delay(1000)), of([{\n        name: 'John',\n        img: 'https://st.depositphotos.com/1771835/1477/i/950/depositphotos_14779771-stock-photo-portrait-of-confident-young-doctor.jpg'\n      }, {\n        name: 'Andy',\n        img: 'https://upload.wikimedia.org/wikipedia/en/0/03/Walter_White_S5B.png'\n      }, {\n        name: 'Jack',\n        img: 'https://upload.wikimedia.org/wikipedia/commons/f/fa/Jack_Black_2006.jpg'\n      }]).pipe(delay(1500))]).pipe( // delay(1000),\n      map(data => {\n        switch (url) {\n          case '/doctors':\n            return data[0];\n\n          case '/photos':\n            return data[1];\n        }\n      }));\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)();\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'any'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}